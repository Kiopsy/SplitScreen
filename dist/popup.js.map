{"mappings":"MAAA,aACAA,SAASC,iBAAiB,oBAAoB,KAE5C,MAAMC,EAAIC,OAAOC,OAAOC,WAClBC,EAAIH,OAAOC,OAAOG,Y,WAalBC,G,WACAC,SAASC,I,OACTC,QAAOC,OAAA,CACPC,IAAKL,EACJM,KAAA,SACFC,MAAAb,EAAA,EACJc,OAAAV,EAEDW,KAAA,EAOSC,IAAI,GACT,G,4BAuCAV,QAAMW,OAAaX,KAAAY,MALlB,CAGCC,eAAe,IAGjBC,EAAA,GAEFC,EAAc,GAGdf,EAAAgB,SAAOC,IAACA,EAAAC,OAAUH,EAAAI,KAAAF,EAAAZ,KAAES,EAAYK,KAAAF,EAAAZ,IAAA,IACjC,IAAAe,EAAA,CAEOX,EAAGM,GAvCN,IAAAd,SAAAC,IACJS,OAAAR,QAAAkB,YAAA,SAAAC,GAED,IAAeC,EAAQ,CACfhB,MAAYb,EAAM,EACbc,OAAIV,EACNW,KAAAf,EAAA,EACVgB,IAAA,EAICa,MAAA,UAAAZ,OAA0CR,QAAAqB,OAAAF,EAAAG,GAAAF,EACtC,QAkCL,a,eAjCkBH,GAEjB,IAAIM,QAAkBzB,QAAA0B,IAAAP,GACtB,IAAI,IAAAQ,KAAUF,G,CA2BZG,CAAYT,GAGf,C","sources":["src/popup.js"],"sourcesContent":["'use strict';\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\r\n  const w = window.screen.availWidth;\r\n  const h = window.screen.availHeight;\r\n\r\n  /**\r\n   * It creates a new window with the url of the tab, and the width and height of the screen, and the\r\n   * left and top of the screen\r\n   * @param tabs - the array of tabs you want to open\r\n   * @returns A promise\r\n   */\r\n  function left(tabs) {\r\n    return new Promise((resolve) => {\r\n      chrome.windows.create({\r\n        url: tabs,\r\n        type: \"normal\",\r\n        width: w  / 2,\r\n        height: h,\r\n        left: 0,\r\n        top: 0\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * It gets the current window, then updates it to be half the width of the screen, the full height of\r\n   * the screen, and positioned on the right side of the screen\r\n   * @param tabs - The tabs that are currently open in the current window.\r\n   * @returns A promise\r\n   */\r\n  function right(tabs) {\r\n    return new Promise((resolve) => {\r\n      chrome.windows.getCurrent(function (window) {\r\n        var updateInfo = {\r\n          width: w  / 2,\r\n          height: h,\r\n          left: w / 2,\r\n          top: 0\r\n        };\r\n        (updateInfo.state = \"normal\"), chrome.windows.update(window.id, updateInfo);\r\n      });\r\n    });\r\n  }\r\n\r\n  async function process(arrayOfPromises) {\r\n      let responses = await Promise.all(arrayOfPromises);\r\n      for(let r of responses) {}\r\n      return;\r\n  }\r\n\r\n\r\n  async function getTabs() {\r\n    // query Chrome for tabs in current window\r\n    let queryOptions = { currentWindow: true };\r\n    let tabs = await chrome.tabs.query(queryOptions);\r\n\r\n    let inactiveTabs = [];\r\n    let activeTabs = [];\r\n\r\n    // sort tabs by activeness\r\n    tabs.forEach(tab => {\r\n      if (tab.active) {\r\n        activeTabs.push(tab.url);\r\n      } else {\r\n        inactiveTabs.push(tab.url);\r\n      }\r\n    });\r\n\r\n\r\n    let arrayOfPromises = [\r\n      left(activeTabs),\r\n      right(inactiveTabs)\r\n    ];  \r\n  \r\n    await process(arrayOfPromises);\r\n\r\n    // console.log(tabs);\r\n    return [activeTabs, inactiveTabs]\r\n  }\r\n\r\n  let tabs = getTabs();\r\n\r\n  console.log(tabs);\r\n  let activeTabs = tabs[0];\r\n  let inactiveTabs = tabs[1];\r\n  \r\n  console.log(activeTabs);\r\n});\r\n\r\n\r\n\r\n\r\n"],"names":["document","addEventListener","w","window","screen","availWidth","h","availHeight","tabs","Promise","resolve","windows","create","url","type","width","height","left","top","chrome","query","currentWindow","inactiveTabs","activeTabs","forEach","tab","active","push","arrayOfPromises","getCurrent","window1","updateInfo","update","id","responses","all","r","process"],"version":3,"file":"popup.js.map"}